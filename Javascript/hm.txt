<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>replit</title>
  <link href="style.css" rel="stylesheet" type="text/css" />
</head>

<body>
  <div class="card">
  <div class="card2">
    <div class="input-group">
  <input required="" type="text" name="text" autocomplete="off" class="input">
  <label class="user-label">Enter The Username</label>
  <button id="btn"> Hack
</button>
</div>
  </div>
</div>
  <script src="script.js"></script>


  <script src="https://replit.com/public/js/replit-badge.js" theme="blue" defer></script> 
</body>

</html>

let btn = document.getElementById('btn')
btn.addEventListener("click", ()=>{
  let input = document.querySelector('.input').value
  document.body.style.backgroundColor = "#000"
  document.body.innerHTML = `
    <h4 id="hacker"></h4>

`
  // document.getElementById("first").innerHTML= "installing hacking tools....."

// document.getElementById("second").innerHTML= "hacking ashish17...."


// document.getElementById("thr").innerHTML= "found username ashish17...."

// document.getElementById("fourth").innerHTML= "ashish17 hacked!"

 
async function install(elm,text) {
  let first= document.getElementById('hacker')
  first.innerHTML= text
  let i= 0
  while(i !== 100){
    let ran= Math.floor(Math.random()*5)
        
    i= i+ran
    if(i>100){
      i= 100
    }
    await new Promise(r => setTimeout(r, 100));
first.innerHTML= `${text} ${i}%`
    console.log(i)
    
  }
}
const hacker= async ()=>{
  // let first= document.getElementById("hacker")
  let p= 0;
  await new Promise(r => setTimeout(r, 1000));
  await install("hacker",`installing hacking tools to hack ${input}.....`)
await install("hacker",`Fetching Details username ${input}....`)
  await install("hacker",`hacking ${input}....`)
  document.getElementById("hacker").innerHTML= `${input} hacked! succesfully`
  console.log("done")
//first.innerHTML= "done"
}

hacker()


})

@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300&display=swap');

html, body {
  height: 100%;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: #1b1818;
  font-family: 'Poppins', sans-serif;

}
h4{
  color: #00ff75;
}
/* From uiverse.io by @Tiagoadag */
.card {
 width: 390px;
 height: 354px;
 background-image: linear-gradient(163deg, #00ff75 0%, #3700ff 100%);
 border-radius: 20px;
 transition: all .3s;

}

.card2 {
 width: 390px;
 height: 354px;
 background-color: #000;
 border-radius: 13px;
 transition: all .2s;
    display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.card2:hover {
 transform: scale(0.98);
 border-radius: 20px;
}

.card:hover {
 box-shadow: 0px 0px 30px 1px rgba(0, 255, 117, 0.30);
}
/* From uiverse.io by @alexruix */
.input-group {
 position: relative;
}

.input {
 border: solid 1.5px #9e9e9e;
 border-radius: 1rem;
 background: none;
/*   width: 100%; */
 padding: 1rem;
 font-size: 1rem;
 color: #f5f5f5;
 transition: border 150ms cubic-bezier(0.4,0,0.2,1);
}

.user-label {
 position: absolute;
 left: 15px;
 color: #e8e8e8;
 pointer-events: none;
 transform: translateY(1rem);
 transition: 150ms cubic-bezier(0.4,0,0.2,1);
}

.input:focus, input:valid {
 outline: none;
 border: 1.5px solid #1a73e8;
}

.input:focus ~ label, input:valid ~ label {
 transform: translateY(-50%) scale(0.8);
 background-color: #000;
 padding: 0 .2em;
 color: #2196f3;
}
/* From uiverse.io by @adamgiebl */
button {
  display: block;
  cursor: pointer;
  margin: 20px auto;
 --green: #1BFD9C;
 font-size: 15px;
 padding: 0.7em 2.7em;
 letter-spacing: 0.06em;
 position: relative;
 font-family: inherit;
 border-radius: 0.6em;
 overflow: hidden;
 transition: all 0.3s;
 line-height: 1.4em;
 border: 2px solid var(--green);
 background: linear-gradient(to right, rgba(27, 253, 156, 0.1) 1%, transparent 40%,transparent 60% , rgba(27, 253, 156, 0.1) 100%);
 color: var(--green);
 box-shadow: inset 0 0 10px rgba(27, 253, 156, 0.4), 0 0 9px 3px rgba(27, 253, 156, 0.1);
}

button:hover {
 color: #82ffc9;
 box-shadow: inset 0 0 10px rgba(27, 253, 156, 0.6), 0 0 9px 3px rgba(27, 253, 156, 0.2);
}

button:before {
 content: "";
 position: absolute;
 left: -4em;
 width: 4em;
 height: 100%;
 top: 0;
 transition: transform .4s ease-in-out;
 background: linear-gradient(to right, transparent 1%, rgba(27, 253, 156, 0.1) 40%,rgba(27, 253, 156, 0.1) 60% , transparent 100%);
}

button:hover:before {
 transform: translateX(15em);
}